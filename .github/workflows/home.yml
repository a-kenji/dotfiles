name: "home-manager"
on:
  pull_request:
  push:
jobs:
  nix-build-minimal:
    runs-on: ubuntu-latest
    name: "build home-manager minimal"
    environment: "cachix"
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v10
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#nixosModules.home-manager.minimal.activationPackage

  nix-build-neovim:
    runs-on: ubuntu-latest
    name: "build home-manager neovim"
    environment: "cachix"
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v10
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#nixosModules.home-manager.neovim.activationPackage

  nix-build-tools:
    runs-on: ubuntu-latest
    name: "build home-manager tools"
    environment: "cachix"
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v10
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#nixosModules.home-manager.tools.activationPackage

  nix-build-common:
    runs-on: ubuntu-latest
    name: "build home-manager common"
    environment: "cachix"
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v17
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    - uses: cachix/cachix-action@v10
      with:
        name: kenji
        # If you chose API tokens for write access OR if you have a private cache
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix build .#nixosModules.home-manager.common.activationPackage
